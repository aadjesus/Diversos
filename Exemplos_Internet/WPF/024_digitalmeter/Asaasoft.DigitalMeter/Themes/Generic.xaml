<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:Asaasoft.DigitalMeter">
    <Storyboard x:Key="countingAnimation">
    </Storyboard>
    <Style TargetType="local:DigitalMeter">
        <Setter Property="FontSize" Value="42"/>
        <Setter Property="FontFamily" Value="Arial Black" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DigitalMeter">
                    <!-- MSDN Says:
                        "You can't use dynamic resource references or data binding expressions to set Storyboard or animation property values. 
                        That's because everything inside a ControlTemplate must be thread-safe, and the timing system must Freeze Storyboard 
                        objects to make them thread-safe. A Storyboard cannot be frozen if it or its child timelines contain dynamic resource 
                        references or data binding expressions. For more information about freezing and other Freezable features, see the 
                        Freezable Objects Overview."
                        So that is why below code doesn't work
                    -->
                    <!--<ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="local:ScaleControl.ValueChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                <local:CounterAnimation
                                            ??? :( it is not working ???
                                            To="100" />
                                    </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->

                    <!-- Template's Root Visual -->
                    <Grid DataContext="{TemplateBinding ValueText}" >
                        <!-- Collapsed TextBox In Order To Keep New Value !-->
                        <TextBlock x:Name="collapsedTextBlock" Text="{Binding Mode=OneWay}"  Visibility="Collapsed"/>
                        <TextBox Name="collapsedTextBox" Text="{Binding Mode=OneWay}" Visibility="Collapsed">
                            <TextBox.Triggers>
                                <EventTrigger RoutedEvent="TextBox.TextChanged">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <local:CounterAnimation
                                            Storyboard.TargetName="BlurValueTextBlock"
                                            Storyboard.TargetProperty="Text"
                                            From="{Binding Mode=OneWay}" 
                                            To ="{Binding ElementName=collapsedTextBlock, Path=Text}"
                                            Duration="0:0:0.4" />
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="ValueTextBlock"
                                                Storyboard.TargetProperty="(UIElement.Opacity)"
                                                Duration="0:0:0.4">
                                                <LinearDoubleKeyFrame Value="0.0" KeyTime="0:0:0.0" />
                                                <LinearDoubleKeyFrame Value="0.0" KeyTime="0:0:0.399999" />
                                                <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.4" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="BlurValueTextBlock"
                                                Storyboard.TargetProperty="(UIElement.Opacity)"
                                                Duration="0:0:0.4">
                                                <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.0" />
                                                <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.399999" />
                                                <LinearDoubleKeyFrame Value="0.0" KeyTime="0:0:0.4" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBox.Triggers>
                        </TextBox>

                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1.5" CornerRadius="15" Padding="20,20,0,20">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition Width="100"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" x:Name="ValueTextBlock" Foreground="{TemplateBinding Foreground}" Text="{Binding Mode=OneWay}" HorizontalAlignment="Center"  VerticalAlignment="Center" />
                                <TextBlock Grid.Column="0" x:Name="BlurValueTextBlock" Foreground="{TemplateBinding Foreground}" Text="{Binding}" Opacity="0.0" HorizontalAlignment="Center"  VerticalAlignment="Center"  >
                                    <TextBlock.BitmapEffect>
                                        <BlurBitmapEffect Radius="3" />
                                    </TextBlock.BitmapEffect>
                                </TextBlock>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding MeasurementUnit}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <Border BorderBrush="Black" BorderThickness="1.5" CornerRadius="15" Padding="6">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.5" StartPoint="0.5,0">
                                    <GradientStop Color="#AAFFFFFF" Offset="0"/>
                                    <GradientStop Color="#00FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
