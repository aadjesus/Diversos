#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Persian_WPF_Calendar
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserthijri(hijri instance);
    partial void Updatehijri(hijri instance);
    partial void Deletehijri(hijri instance);
    partial void Insertmiladi(miladi instance);
    partial void Updatemiladi(miladi instance);
    partial void Deletemiladi(miladi instance);
    partial void Insertshamsi(shamsi instance);
    partial void Updateshamsi(shamsi instance);
    partial void Deleteshamsi(shamsi instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Persian_WPF_Calendar.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<hijri> hijris
		{
			get
			{
				return this.GetTable<hijri>();
			}
		}
		
		public System.Data.Linq.Table<miladi> miladis
		{
			get
			{
				return this.GetTable<miladi>();
			}
		}
		
		public System.Data.Linq.Table<shamsi> shamsis
		{
			get
			{
				return this.GetTable<shamsi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hijri")]
	public partial class hijri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _text;
		
		private short _year;
		
		private byte _month;
		
		private byte _day;
		
		private System.Nullable<bool> _holiday;
		
		private System.Nullable<bool> _anniversary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnyearChanging(short value);
    partial void OnyearChanged();
    partial void OnmonthChanging(byte value);
    partial void OnmonthChanged();
    partial void OndayChanging(byte value);
    partial void OndayChanged();
    partial void OnholidayChanging(System.Nullable<bool> value);
    partial void OnholidayChanged();
    partial void OnanniversaryChanging(System.Nullable<bool> value);
    partial void OnanniversaryChanged();
    #endregion
		
		public hijri()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NChar(255) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="SmallInt NOT NULL")]
		public short year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="TinyInt NOT NULL")]
		public byte month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="TinyInt NOT NULL")]
		public byte day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_holiday", DbType="Bit")]
		public System.Nullable<bool> holiday
		{
			get
			{
				return this._holiday;
			}
			set
			{
				if ((this._holiday != value))
				{
					this.OnholidayChanging(value);
					this.SendPropertyChanging();
					this._holiday = value;
					this.SendPropertyChanged("holiday");
					this.OnholidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anniversary", DbType="Bit")]
		public System.Nullable<bool> anniversary
		{
			get
			{
				return this._anniversary;
			}
			set
			{
				if ((this._anniversary != value))
				{
					this.OnanniversaryChanging(value);
					this.SendPropertyChanging();
					this._anniversary = value;
					this.SendPropertyChanged("anniversary");
					this.OnanniversaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.miladi")]
	public partial class miladi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _text;
		
		private short _year;
		
		private byte _month;
		
		private byte _day;
		
		private System.Nullable<bool> _holiday;
		
		private System.Nullable<bool> _anniversary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnyearChanging(short value);
    partial void OnyearChanged();
    partial void OnmonthChanging(byte value);
    partial void OnmonthChanged();
    partial void OndayChanging(byte value);
    partial void OndayChanged();
    partial void OnholidayChanging(System.Nullable<bool> value);
    partial void OnholidayChanged();
    partial void OnanniversaryChanging(System.Nullable<bool> value);
    partial void OnanniversaryChanged();
    #endregion
		
		public miladi()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NChar(255) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="SmallInt NOT NULL")]
		public short year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="TinyInt NOT NULL")]
		public byte month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="TinyInt NOT NULL")]
		public byte day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_holiday", DbType="Bit")]
		public System.Nullable<bool> holiday
		{
			get
			{
				return this._holiday;
			}
			set
			{
				if ((this._holiday != value))
				{
					this.OnholidayChanging(value);
					this.SendPropertyChanging();
					this._holiday = value;
					this.SendPropertyChanged("holiday");
					this.OnholidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anniversary", DbType="Bit")]
		public System.Nullable<bool> anniversary
		{
			get
			{
				return this._anniversary;
			}
			set
			{
				if ((this._anniversary != value))
				{
					this.OnanniversaryChanging(value);
					this.SendPropertyChanging();
					this._anniversary = value;
					this.SendPropertyChanged("anniversary");
					this.OnanniversaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shamsi")]
	public partial class shamsi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _text;
		
		private short _year;
		
		private byte _month;
		
		private byte _day;
		
		private System.Nullable<bool> _holiday;
		
		private System.Nullable<bool> _anniversary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnyearChanging(short value);
    partial void OnyearChanged();
    partial void OnmonthChanging(byte value);
    partial void OnmonthChanged();
    partial void OndayChanging(byte value);
    partial void OndayChanged();
    partial void OnholidayChanging(System.Nullable<bool> value);
    partial void OnholidayChanged();
    partial void OnanniversaryChanging(System.Nullable<bool> value);
    partial void OnanniversaryChanged();
    #endregion
		
		public shamsi()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NChar(255) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="SmallInt NOT NULL")]
		public short year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="TinyInt NOT NULL")]
		public byte month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="TinyInt NOT NULL")]
		public byte day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_holiday", DbType="Bit")]
		public System.Nullable<bool> holiday
		{
			get
			{
				return this._holiday;
			}
			set
			{
				if ((this._holiday != value))
				{
					this.OnholidayChanging(value);
					this.SendPropertyChanging();
					this._holiday = value;
					this.SendPropertyChanged("holiday");
					this.OnholidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anniversary", DbType="Bit")]
		public System.Nullable<bool> anniversary
		{
			get
			{
				return this._anniversary;
			}
			set
			{
				if ((this._anniversary != value))
				{
					this.OnanniversaryChanging(value);
					this.SendPropertyChanging();
					this._anniversary = value;
					this.SendPropertyChanged("anniversary");
					this.OnanniversaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
