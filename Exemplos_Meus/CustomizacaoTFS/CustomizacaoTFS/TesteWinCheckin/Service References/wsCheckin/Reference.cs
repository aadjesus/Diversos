//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TesteWinCheckin.wsCheckin {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/", ConfigurationName="wsCheckin.CheckinSoap")]
    public interface CheckinSoap {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/03) of message NotifyRequest does not match the default value (http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/03/Noti" +
            "fy", ReplyAction="*")]
        TesteWinCheckin.wsCheckin.NotifyResponse Notify(TesteWinCheckin.wsCheckin.NotifyRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Notify", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/03", IsWrapped=true)]
    public partial class NotifyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/03", Order=0)]
        public string eventXml;
        
        public NotifyRequest() {
        }
        
        public NotifyRequest(string eventXml) {
            this.eventXml = eventXml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NotifyResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/", IsWrapped=true)]
    public partial class NotifyResponse {
        
        public NotifyResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CheckinSoapChannel : TesteWinCheckin.wsCheckin.CheckinSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckinSoapClient : System.ServiceModel.ClientBase<TesteWinCheckin.wsCheckin.CheckinSoap>, TesteWinCheckin.wsCheckin.CheckinSoap {
        
        public CheckinSoapClient() {
        }
        
        public CheckinSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CheckinSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckinSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckinSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TesteWinCheckin.wsCheckin.NotifyResponse TesteWinCheckin.wsCheckin.CheckinSoap.Notify(TesteWinCheckin.wsCheckin.NotifyRequest request) {
            return base.Channel.Notify(request);
        }
        
        public void Notify(string eventXml) {
            TesteWinCheckin.wsCheckin.NotifyRequest inValue = new TesteWinCheckin.wsCheckin.NotifyRequest();
            inValue.eventXml = eventXml;
            TesteWinCheckin.wsCheckin.NotifyResponse retVal = ((TesteWinCheckin.wsCheckin.CheckinSoap)(this)).Notify(inValue);
        }
    }
}
